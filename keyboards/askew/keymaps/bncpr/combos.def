//   name         result     chord keys
/* COMB(COMBO_VIM_H, KC_H,      KC_H, KC_K) */
/* COMB(COMBO_VIM_J, KC_J,      KC_J, KC_K) */
/* COMB(COMBO_VIM_K, KC_K,      KC_K, KC_L) */
/* COMB(COMBO_VIM_L, KC_L,      KC_J, KC_L) */

/* COMB(COMBO_ENTER, KC_ENTER,  KC_K, KC_L) */
COMB(COMBO_ESC,   KC_ESC,    KC_J, KC_K)
/* COMB(COMBO_BSPC,  KC_BSPC,   KC_O, KC_P) */

COMB(COMBO_LPRN,  KC_LPRN,   KC_E,    KC_R)
COMB(COMBO_RPRN,  KC_RPRN,   KC_U,    KC_I)
COMB(COMBO_LBRC,  KC_LBRC,   KC_W,    KC_E)
COMB(COMBO_RBRC,  KC_RBRC,   KC_I,    KC_O)
COMB(COMBO_LCBR,  KC_LCBR,   KC_Q,    KC_W)
COMB(COMBO_RCBR,  KC_RCBR,   KC_O,    KC_P)
COMB(COMBO_MINS,  KC_MINS,   KC_D,    KC_F)
COMB(COMBO_PLUS,  KC_PLUS,   KC_S,    KC_D)
COMB(COMBO_EQL,   KC_EQL,    KC_A,    KC_S)
COMB(COMBO_GRAVE, KC_GRAVE,  KC_M,    KC_COMM)
COMB(COMBO_TILD,  KC_TILD,   KC_COMM, KC_DOT)
COMB(COMBO_PERC,  KC_PERC,   KC_DOT,  KC_SLSH)
COMB(COMBO_ASTR,  KC_ASTR,   KC_C,    KC_V)
COMB(COMBO_HASH,  KC_HASH,   KC_X,    KC_C)
COMB(COMBO_AMPR,  KC_AMPR,   KC_Z,    KC_X)
COMB(COMBO_DLR,   KC_DLR,    KC_F,    KC_G)
COMB(COMBO_CIRC,  KC_CIRC,   KC_V,    KC_B)
COMB(COMBO_AT,    KC_AT,     KC_H,    KC_J)
COMB(COMBO_EXLM,  KC_EXLM,   KC_N,    KC_M)

/* COMB(COMBO_COPY,   C(KC_C),     KC_X,    KC_C) */
COMB(COMBO_PASTE,  S(C(KC_V)),  KC_X,    KC_V)
/* COMB(COMBO_UNDO,   C(KC_Z),     KC_Z,    KC_X) */
/* COMB(COMBO_REDO,   C(KC_Y),     KC_LSFT, KC_Z, KC_X) */

SUBS(COMBO_PAREN,  "()" SS_TAP(X_LEFT),  KC_F, KC_J)
SUBS(COMBO_SQBRC,  "[]" SS_TAP(X_LEFT),  KC_D, KC_K)
SUBS(COMBO_CBRC,   "{}" SS_TAP(X_LEFT),  KC_S, KC_L)
SUBS(COMBO_QUOT, "\"\"" SS_TAP(X_LEFT),  KC_Z, KC_SLSH)
SUBS(COMBO_SQUOT, "''"  SS_TAP(X_LEFT),  KC_V, KC_M)
SUBS(COMBO_TRIAG, "<>"  SS_TAP(X_LEFT),  KC_C, KC_COMM)
SUBS(COMBO_ARROW, "->",                  KC_K, KC_DOT)
SUBS(COMBO_EQ,    "==",                  KC_C, KC_F)
SUBS(COMBO_NOTEQ, "!=",                  KC_X, KC_D)
SUBS(COMBO_2COL,  "::",                  KC_L, KC_SCLN)
